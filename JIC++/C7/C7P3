/* Write a two-player tic-tac-toe game, allowing two humans to play against each other; use enums when possible to represent the values of the board */

#include <iostream>

/* Creating an Enum for board numbers  */
enum board_numbers{
    TTTS_BLANK = 0, TTTS_O = 1, TTTS_X = 2
};

/* Creating Global Variables */
std::string TopLeft = "1", TopMiddle = "2", TopRight = "3", MiddleLeft = "4", Middle = "5", MiddleRight = "6", BottomLeft = "7", BottomMiddle = "8", BottomRight = "9";
int TopLeft_Value = 0, TopMiddle_Value = 0, TopRight_Value = 0, MiddleLeft_Value = 0, Middle_Value = 0, MiddleRight_Value = 0, BottomLeft_Value = 0, BottomMiddle_Value = 0, BottomRight_Value = 0;
int user_input, board_spots = 0;
std::string DC1, DC2, DC3;

void gameboard(){
    /* TicTacToe Display Gameboard */
    std::cout << std::endl;
    std::cout << "|" << TopLeft << "|" << TopMiddle << "|" << TopRight << "|\n";
    std::cout << "|" << MiddleLeft << "|" << Middle << "|" << MiddleRight << "|\n";
    std::cout << "|" << BottomLeft << "|" << BottomMiddle << "|" << BottomRight << "|\n" << std::endl;
}

void player_x(){

    /* Creating Function Variable */
    int turn_check = 1;

    do {

    std::cout << "Player (X), Where Would You Like To Go? (Enter 10 To Stop The Game)\n";
        std::cin >> user_input;

        switch (user_input){

            case 1:
                if (TopLeft_Value == TTTS_BLANK){
                TopLeft = "X";
                TopLeft_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 2:
                if (TopMiddle_Value == TTTS_BLANK){
                TopMiddle = "X";
                TopMiddle_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 3:
                if (TopRight_Value == TTTS_BLANK){
                TopRight = "X";
                TopRight_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 4:
                if (MiddleLeft_Value == TTTS_BLANK){
                MiddleLeft = "X";
                MiddleLeft_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 5:
                if (Middle_Value == TTTS_BLANK){
                Middle = "X";
                Middle_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 6:
                if (MiddleRight_Value == TTTS_BLANK){
                MiddleRight = "X";
                MiddleRight_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 7:
                if (BottomLeft_Value == TTTS_BLANK){
                BottomLeft = "X";
                BottomLeft_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 8:
                if (BottomMiddle_Value == TTTS_BLANK){
                BottomMiddle = "X";
                BottomMiddle_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 9:
                if (BottomRight_Value == TTTS_BLANK){
                BottomRight = "X";
                BottomRight_Value = 2;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 10:
                DC1 = "D", DC2 = "D", DC3 = "D";
                turn_check = 0;
                break;

        }

    } while (turn_check != 0);

}

void player_o(){

    /* Creating Function Variable */
    int turn_check = 1;

    if (DC1 + DC2 + DC3 == "DDD"){
        turn_check = 0;
    }

    while (turn_check != 0) {

    gameboard();

    std::cout << std::endl << "Player (O), Where Would You Like To Go? (Enter 10 To Stop The Game)\n";
        std::cin >> user_input;

        switch (user_input){

            case 1:
                if (TopLeft_Value == TTTS_BLANK){
                TopLeft = "O";
                TopLeft_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 2:
                if (TopMiddle_Value == TTTS_BLANK){
                TopMiddle = "O";
                TopMiddle_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 3:
                if (TopRight_Value == TTTS_BLANK){
                TopRight = "O";
                TopRight_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 4:
                if (MiddleLeft_Value == TTTS_BLANK){
                MiddleLeft = "O";
                MiddleLeft_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 5:
                if (Middle_Value == TTTS_BLANK){
                Middle = "O";
                Middle_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 6:
                if (MiddleRight_Value == TTTS_BLANK){
                MiddleRight = "O";
                MiddleRight_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 7:
                if (BottomLeft_Value == TTTS_BLANK){
                BottomLeft = "O";
                BottomLeft_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 8:
                if (BottomMiddle_Value == TTTS_BLANK){
                BottomMiddle = "O";
                BottomMiddle_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 9:
                if (BottomRight_Value == TTTS_BLANK){
                BottomRight = "O";
                BottomRight_Value = 1;
                board_spots = board_spots + 1;
                turn_check = 0;
                break;
                }
                else{
                    std::cout << std::endl << std::endl << "Sorry! This Spot Is Taken!\n" << std::endl;
                    continue;
                }
            case 10:
                DC1 = "D", DC2 = "D", DC3 = "D";
                turn_check = 0;
                break;

        }

    }

}

void gamestatus(){

/* Player X Winning Check*/
    if (TopLeft + TopMiddle + TopRight == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(MiddleLeft + Middle + MiddleRight == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(BottomLeft + BottomMiddle + BottomRight == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(TopLeft + MiddleLeft + BottomLeft == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(TopMiddle + Middle + BottomMiddle == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(TopRight + MiddleRight + BottomRight == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(TopLeft + Middle + BottomRight == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }
    else if(TopRight + Middle + BottomLeft == "XXX"){
        std::cout << "Player (X) Was The First One To Win!\n";
    }

/* Player O Winning Check*/

    if (TopLeft + TopMiddle + TopRight == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(MiddleLeft + Middle + MiddleRight == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(BottomLeft + BottomMiddle + BottomRight == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(TopLeft + MiddleLeft + BottomLeft == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(TopMiddle + Middle + BottomMiddle == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(TopRight + MiddleRight + BottomRight == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(TopLeft + Middle + BottomRight == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }
    else if(TopRight + Middle + BottomLeft == "OOO"){
        std::cout << "Player (O) Was The First One To Win!\n";
    }

    /* Draw Check */

    if (user_input == 10){

        if (board_spots == 9 && TopLeft + TopMiddle + TopRight != "XXX" && MiddleLeft + Middle + MiddleRight != "XXX" && BottomLeft + BottomMiddle + BottomRight != "XXX" && TopLeft + MiddleLeft + BottomLeft != "XXX" && TopMiddle + Middle + BottomMiddle != "XXX" && TopRight + MiddleRight + BottomRight != "XXX" && TopLeft + Middle + BottomRight != "XXX" && TopRight + Middle + BottomLeft != "XXX" && TopLeft + TopMiddle + TopRight != "OOO" && MiddleLeft + Middle + MiddleRight != "OOO" && BottomLeft + BottomMiddle + BottomRight != "OOO" && TopLeft + MiddleLeft + BottomLeft != "OOO" && TopMiddle + Middle + BottomMiddle != "OOO" && TopRight + MiddleRight + BottomRight != "OOO" && TopLeft + Middle + BottomRight != "OOO" && TopRight + Middle + BottomLeft != "OOO"){
            std::cout << "This Game Has Ended In A Draw!\n" << std::endl;
        }

    }

}

int main(){

    std::cout << "Welcome To TicTacToe (Basic Edition)!\n";

    while (user_input != 10 && board_spots != 9 && TopLeft + TopMiddle + TopRight != "XXX" && MiddleLeft + Middle + MiddleRight != "XXX" && BottomLeft + BottomMiddle + BottomRight != "XXX" && TopLeft + MiddleLeft + BottomLeft != "XXX" && TopMiddle + Middle + BottomMiddle != "XXX" && TopRight + MiddleRight + BottomRight != "XXX" && TopLeft + Middle + BottomRight != "XXX" && TopRight + Middle + BottomLeft != "XXX" && TopLeft + TopMiddle + TopRight != "OOO" && MiddleLeft + Middle + MiddleRight != "OOO" && BottomLeft + BottomMiddle + BottomRight != "OOO" && TopLeft + MiddleLeft + BottomLeft != "OOO" && TopMiddle + Middle + BottomMiddle != "OOO" && TopRight + MiddleRight + BottomRight != "OOO" && TopLeft + Middle + BottomRight != "OOO" && TopRight + Middle + BottomLeft != "OOO"){

        gameboard();

        player_x();

        player_o();

    }

    gameboard();

    gamestatus();

    return 0;
}
